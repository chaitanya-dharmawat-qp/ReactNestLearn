import { default as React } from 'react';
export type IWuSelectProps<T> = Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'value' | 'defaultValue' | 'onSelect'> & {
    defaultValue?: T | T[] | null;
    Label?: React.ReactNode;
    value?: T | T[] | null;
    data: T[];
    accessorKey: {
        value: string;
        label: string;
    };
    onSelect?: (value: T | T[]) => void;
    multiple?: boolean;
    variant?: 'flat' | 'outlined';
    dir?: 'ltr' | 'rtl';
    placeholder?: string;
    virtualizedThreshold?: number;
    maxHeight?: number;
    maxContentWidth?: string;
    hasGroup?: boolean;
    Header?: React.ReactNode;
    CustomTrigger?: React.ReactNode;
    selectAll?: {
        enable: boolean;
        label?: string;
        includeDisabled?: boolean;
        triggerText?: string;
    };
    labelPosition?: 'left' | 'top' | 'right';
    onScroll?: React.UIEventHandler<HTMLDivElement>;
};
export declare const WuSelect: <T>({ data, onSelect, multiple, defaultValue, value: controlledValue, accessorKey, variant, dir, placeholder, Label, virtualizedThreshold, maxHeight, hasGroup, Header, CustomTrigger, selectAll, disabled, labelPosition, onScroll, maxContentWidth, ...rest }: IWuSelectProps<T>) => React.JSX.Element;
