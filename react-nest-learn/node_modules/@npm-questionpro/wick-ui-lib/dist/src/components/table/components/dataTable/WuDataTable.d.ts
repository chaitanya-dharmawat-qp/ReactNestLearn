import { default as React } from 'react';
import { IWuManualSorting } from '../../types/IWuManualSorting';
import { IWuTableColumnDef } from '../../types/IWuTableColumnDef';
export interface IWuDataTableProps<T> extends React.TableHTMLAttributes<HTMLTableElement> {
    data: T[];
    columns: IWuTableColumnDef<T>[];
    caption?: string;
    variant?: 'unstyled' | 'striped' | 'bordered';
    size?: 'compact' | 'default';
    sort?: {
        enabled: boolean;
        onSort: (sort: IWuManualSorting) => void;
    };
    isLoading?: boolean;
    rowSelection?: {
        isEnabled: boolean;
        selectedRows: T[];
        onRowSelect: React.Dispatch<React.SetStateAction<T[]>>;
        rowUniqueKey: string;
    };
    CustomLoader?: React.ReactNode;
    HeaderAction?: React.ReactNode;
    NoDataContent?: React.ReactNode;
    stickyHeader?: boolean;
}
export declare const WuDataTable: <T>({ data, columns, isLoading, variant, sort, size, rowSelection, HeaderAction, NoDataContent, stickyHeader, CustomLoader, caption, ...props }: IWuDataTableProps<T>) => React.JSX.Element;
