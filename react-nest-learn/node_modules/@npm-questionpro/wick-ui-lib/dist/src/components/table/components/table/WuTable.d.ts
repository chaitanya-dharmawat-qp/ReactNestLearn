import { ColumnSort } from '@tanstack/react-table';
import { default as React } from 'react';
import { IWuTableColumnDef } from '../../types/IWuTableColumnDef';
export interface IWuTableProps<T> extends React.TableHTMLAttributes<HTMLTableElement> {
    data: T[];
    columns: IWuTableColumnDef<T>[];
    variant?: 'striped' | 'unstyled' | 'bordered';
    size?: 'compact' | 'default';
    caption?: string;
    sort?: {
        enabled?: boolean;
        initial?: ColumnSort[];
    };
    filterText?: string;
    pagination?: {
        pageIndex: number;
        pageSize: number;
    };
    rowSelection?: {
        isEnabled: boolean;
        selectedRows: T[];
        onRowSelect: React.Dispatch<React.SetStateAction<T[]>>;
        rowUniqueKey: string;
    };
    HeaderAction?: React.ReactNode;
    NoDataContent?: React.ReactNode;
    CustomLoader?: React.ReactNode;
    isLoading?: boolean;
    stickyHeader?: boolean;
}
export declare const WuTable: {
    <T>({ data, columns, caption, variant, sort, filterText, size, pagination, rowSelection, HeaderAction, NoDataContent, CustomLoader, isLoading, stickyHeader, ...rest }: IWuTableProps<T>): React.JSX.Element;
    displayName: string;
};
